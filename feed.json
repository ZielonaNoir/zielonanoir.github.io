{
    "version": "https://jsonfeed.org/version/1",
    "title": "CygneNoir",
    "subtitle": "",
    "icon": "http://example.com/assets/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/07/25/README/",
            "url": "http://example.com/2024/07/25/README/",
            "title": "",
            "date_published": "2024-07-25T08:21:34.722Z",
            "content_html": "<h1 id=\"shokax-can\"><a class=\"anchor\" href=\"#shokax-can\">#</a> ShokaX Can</h1>\n<h2 id=\"开始\"><a class=\"anchor\" href=\"#开始\">#</a> 开始</h2>\n<p>ShokaX 即食罐头，使用 pnpm 加热即可食用，执行下列命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/theme-shoka-x/shokax-can <span class=\"token parameter variable\">--depth</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> shokax-can</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">pnpm</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo s <span class=\"token comment\"># 如果报错更换为 pnpm dlx hexo s</span></pre></td></tr></table></figure><p>当前内容物版本：ShokaX v0.4.11 不含 lightning-minify</p>\n<h2 id=\"创建链接\"><a class=\"anchor\" href=\"#创建链接\">#</a> 创建链接</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mklink /J .<span class=\"token punctuation\">\\</span>themes<span class=\"token punctuation\">\\</span>shokax .<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>hexo-theme-shokax <span class=\"token comment\"># windows CMD</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/themes <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> <span class=\"token punctuation\">..</span>/node_modules/hexo-theme-shokax shokax <span class=\"token comment\"># Linux Bash</span></pre></td></tr></table></figure><p>随后可以通过 <code>themes/shokax</code>  访问主题文件</p>\n<h2 id=\"git\"><a class=\"anchor\" href=\"#git\">#</a> Git</h2>\n<ol>\n<li>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>。</li>\n</ol>\n<pre><code>$ npm install hexo-deployer-git --save\n</code></pre>\n<ol>\n<li>编辑 <strong>_config.yml</strong> （示例值如下所示）：</li>\n</ol>\n<pre><code>deploy:\n  type: git\n  repo: &lt;repository url&gt; # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io\n  branch: [branch]\n  message: [message]\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">选项</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">默认</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>repo</code></td>\n<td style=\"text-align:left\">目标存储库的 URL</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>branch</code></td>\n<td style=\"text-align:left\">分支名称</td>\n<td style=\"text-align:left\"><code>gh-pages</code>  (GitHub)  <code>coding-pages</code>  (<a href=\"http://Coding.net\">Coding.net</a>)  <code>master</code>  (others)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>message</code></td>\n<td style=\"text-align:left\">自定义提交信息</td>\n<td style=\"text-align:left\"><code>Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>token</code></td>\n<td style=\"text-align:left\">可选的令牌值，用于认证 repo。 用  <code>$</code>  作为前缀从而从环境变量中读取令牌</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>此外，如果您的 Github Pages 需要使用 CNAME 文件<strong>自定义域名</strong>，请将 CNAME 文件置于  <code>source</code>  目录下，只有这样  <code>hexo deploy</code>  才能将 CNAME 文件一并推送至部署分支。</li>\n</ol>\n<ul>\n<li>除非你使用令牌或 SSH 密钥认证，否则你会被提示提供目标仓库的用户名和密码。</li>\n<li>hexo-deployer-git 并不会存储你的用户名和密码。 请使用 <a href=\"https://git-scm.com/docs/git-credential-cache\">git-credential-cache</a> 来临时存储它们。</li>\n</ul>\n<ol>\n<li>登入 Github/BitBucket/Gitlab，请在库设置（Repository Settings）中将默认分支设置为 <code>_config.yml</code>  配置中的分支名称。 稍等片刻，您的站点就会显示在您的 Github Pages 中。</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/07/22/Noir710InteriorUbuntu2004Baseline/",
            "url": "http://example.com/2024/07/22/Noir710InteriorUbuntu2004Baseline/",
            "title": "",
            "date_published": "2024-07-22T04:07:21.706Z",
            "content_html": "<pre><code># Ubuntu 基线指导手册\n</code></pre>\n<h1 id=\"1-身份鉴别策略组检测\"><a class=\"anchor\" href=\"#1-身份鉴别策略组检测\">#</a> 1.   身份鉴别策略组检测</h1>\n<p>准备：</p>\n<p>安装一个 PAM 模块来启用 cracklib 支持，这可以提供额外的密码检查功能。</p>\n<p>在 Debian,Ubuntu 或者 Linux Mint 使用命令:</p>\n<p><strong>sudo apt-get install libpam-cracklib</strong></p>\n<p>这个模块在 CentOS,Fedora 或者 RHEL 默认安装了。但是在 Ubuntu 这些系统上就必需安装。</p>\n<h2 id=\"11-口令周期检测\"><a class=\"anchor\" href=\"#11-口令周期检测\">#</a> 1.1.  口令周期检测</h2>\n<h3 id=\"111-最长使用周期小于等于-90-天非强制\"><a class=\"anchor\" href=\"#111-最长使用周期小于等于-90-天非强制\">#</a> 1.1.1.     最长使用周期小于等于 90 天（非强制）</h3>\n<p><strong>sudo vim /etc/login.defs</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181501059-358315675.png\" alt=\"\" /></p>\n<p>PASS_MAX_DAYS 90</p>\n<p>PASS_MAX_DAYS 99999 代表永不过期</p>\n<h3 id=\"112-查看密码期限最短更换周期大于等于-2-天\"><a class=\"anchor\" href=\"#112-查看密码期限最短更换周期大于等于-2-天\">#</a> 1.1.2.     查看密码期限：最短更换周期大于等于 2 天</h3>\n<p>PASS_MIN_DAYS 2</p>\n<p>检查命令：</p>\n<p><strong>chage -l root</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181518055-1064672146.png\" alt=\"\" /></p>\n<h3 id=\"113-距失效提示天数大于等于-5-天\"><a class=\"anchor\" href=\"#113-距失效提示天数大于等于-5-天\">#</a> 1.1.3.     距失效提示天数大于等于 5 天</h3>\n<p>PASS_WARN_AGE 5</p>\n<h2 id=\"12-密码复杂度检测\"><a class=\"anchor\" href=\"#12-密码复杂度检测\">#</a> 1.2.  密码复杂度检测</h2>\n<h3 id=\"121-密码复杂性要求\"><a class=\"anchor\" href=\"#121-密码复杂性要求\">#</a> 1.2.1.     密码复杂性要求</h3>\n<p>pam_cracklib.so 支持的部分选项如下：</p>\n<p><strong>retry=N**</strong>：** 定义登录 / 修改密码失败时，可以重试的次数</p>\n<p><strong>minlen=N**</strong>：** 新密码的最小长度</p>\n<p><strong>dcredit=N**</strong>：** 当 N&gt;0 时表示新密码中数字出现的最多次数；当 N&lt;0 时表示新密码中数字出现最少次数；</p>\n<p><strong>ucredit=N:</strong>  当 N&gt;0 时表示新密码中大写字母出现的最多次数；当 N&lt;0 时表示新密码中大写字母出现最少次数；</p>\n<p><strong>lcredit=N:</strong>  当 N&gt;0 时表示新密码中小写字母出现的最多次数；当 N&lt;0 时表示新密码中小写字母出现最少次数；</p>\n<p><strong>ocredit=N**</strong>：** 当 N&gt;0 时表示新密码中特殊字符出现的最多次数；当 N&lt;0 时表示新密码中特殊字符出现最少次数；</p>\n<p><strong>maxrepeat=N**</strong>：** 拒绝包含多于 N 个相同连续字符的密码。 默认值为 0 表示禁用此检查</p>\n<p><strong>maxsequence=N**</strong>：** 拒绝包含长于 N 的单调字符序列的密码。默认值为 0 表示禁用此检查。实例是 '12345' 或 'fedcb'。除非序列只是密码的一小部分，否则大多数此类密码都不会通过简单检查。</p>\n<p><strong>enforce_for_root:</strong>  如果用户更改密码是 root，则模块将在失败检查时返回错误。默认情况下，此选项处于关闭状态，只打印有关失败检查的消息，但 root 仍可以更改密码。不要求 root 用户输入旧密码，因此不会执行比较旧密码和新密码的检查</p>\n<p>方法：</p>\n<p><strong>vim</strong> <strong>/etc/pam.d/common-password</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181547252-497974434.png\" alt=\"\" /></p>\n<p><strong>password requisite pam_cracklib.so retry=3 minlen=10 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1</strong></p>\n<p>在 pam_cracklib.so  后添加<strong> minlen=10 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1</strong></p>\n<p>参数含义：密码长度最小为 10 位，数字出现的最少次数为 1 次，大写字母出现最少 1 次，小写字母出现最少 1 次，特殊字符出现最少 1 次</p>\n<h2 id=\"13-登录锁定检测\"><a class=\"anchor\" href=\"#13-登录锁定检测\">#</a> 1.3.  登录锁定检测</h2>\n<h3 id=\"131-普通用户触发锁定次数小于等于-5\"><a class=\"anchor\" href=\"#131-普通用户触发锁定次数小于等于-5\">#</a> 1.3.1.     普通用户触发锁定次数小于等于 5</h3>\n<h3 id=\"132-普通用户锁定时间大于等于-5-分钟\"><a class=\"anchor\" href=\"#132-普通用户锁定时间大于等于-5-分钟\">#</a> 1.3.2.     普通用户锁定时间大于等于 5 分钟</h3>\n<h3 id=\"133-root-用户触发锁定次数小于等于-5\"><a class=\"anchor\" href=\"#133-root-用户触发锁定次数小于等于-5\">#</a> 1.3.3.     Root 用户触发锁定次数小于等于 5</h3>\n<h3 id=\"134-root-用户锁定时间大于等于-5-分钟具体安装配置\"><a class=\"anchor\" href=\"#134-root-用户锁定时间大于等于-5-分钟具体安装配置\">#</a> 1.3.4.     Root 用户锁定时间大于等于 5 分钟具体安装配置：</h3>\n<p>1、修改如下配置文件：（不建议修改）</p>\n<p>这个只是限制了用户从 tty 登录，而没有限制远程登录，如果想限制远程登录，需要改 sshd 文件</p>\n<p><strong>vim /etc/pam.d/login</strong></p>\n<p>在第二行添加</p>\n<p><strong>auth required pam_tally2.so deny=5 unlock_time=300 even_deny_root=5 root_unlock_time=300</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181612573-655450421.png\" alt=\"\" /></p>\n<p>此处使用的是 pam_tally2 模块，如果不支持 pam_tally2 可以使用 pam_tally 模块。另外，不同的 pam 版本，设置可能有所不同，具体使用方法，可以参照相关模块的使用规则。</p>\n<p><strong>注意</strong></p>\n<p><strong>在第二行，添加内容，一定要写在前面</strong>，如果写在后面，虽然用户被锁定，但是只要用户输入正确的密码，还是可以登录的！</p>\n<p>这个只是限制了用户从 tty 登录，而没有限制远程登录，如果想限制远程登录，需要改 sshd 文件</p>\n<p>2、修改 sshd 文件（建议修改）</p>\n<p><strong>vim /etc/pam.d/sshd</strong></p>\n<p>继续在第二行上添加</p>\n<p><strong>auth required pam_tally2.so deny=5 unlock_time=300 even_deny_root=5 root_unlock_time=300</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181630047-984023369.png\" alt=\"\" /></p>\n<p><strong>查看用户登录失败的次数 **</strong>:**</p>\n<p><strong>sudo pam_tally2 --user</strong></p>\n<p>结果</p>\n<p>ubuntu@VM-0-5-ubuntu:~$ sudo pam_tally2 --user</p>\n<p>Login   Failures Latest failure  From</p>\n<p>root    3 09/29/19 15:53:24 45.119.212.105</p>\n<p>ubuntu    9 09/29/19 15:46:58 223.107.140.84</p>\n<p>解锁指定用户:</p>\n<p><strong>sudo pam_tally2 -r -u admin</strong></p>\n<p>admin@VM-0-5-ubuntu:~$ sudo pam_tally2 -r -u admin</p>\n<p>Login   Failures Latest failure  From</p>\n<p>admin    15 09/29/19 15:58:49 223.107.140.84</p>\n<p>ps：这个远程 ssh 的时候，输入密码错误超过三次但是没有提示，但是<strong>只要超过设定的值，输入正确的密码也是登陆不了的</strong>！，还是要等到设定的时间在重新尝试输入正确密码进行登录认证</p>\n<h2 id=\"14-root-权限用户\"><a class=\"anchor\" href=\"#14-root-权限用户\">#</a> 1.4.  Root 权限用户</h2>\n<h3 id=\"141-root-权限用户检测-非强制\"><a class=\"anchor\" href=\"#141-root-权限用户检测-非强制\">#</a> 1.4.1.     root 权限用户检测  （非强制）</h3>\n<p>检查配置文件<strong> cat /etc/passwd</strong>，不能包含用户标识号为 0，除 root 用户外。</p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181701804-434795546.png\" alt=\"\" /></p>\n<p>以第一行为例，从左至右，分别表示：<br />\n帐号名：口令：用户标识号：组标识号：注释性描述：主目录：登录 shell</p>\n<h2 id=\"15-wheel-组非强制\"><a class=\"anchor\" href=\"#15-wheel-组非强制\">#</a> 1.5.  Wheel 组（非强制）</h2>\n<h3 id=\"151-wheel-组检测-非强制\"><a class=\"anchor\" href=\"#151-wheel-组检测-非强制\">#</a> 1.5.1.     wheel 组检测  （非强制）</h3>\n<p>命令：<strong>cat /etc/group</strong></p>\n<p><strong>检查文件 **</strong>/etc/group*<strong>* 中，**<strong>wheel*</strong>* 后面是否有用户名，如果有，将其删除。</strong></p>\n<p>如下图中示例，viewer 用户加入了 wheel 组中，因此 viewer 用户拥有了 root 的部分功能和权限，因此需要将 viewer 删除。</p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181718555-108599370.png\" alt=\"\" /></p>\n<p>Wheel 组概念</p>\n<p>Wheel 组是 Unix 系统一个遗留物。当服务器需要做比日常例行维护更高级的工作的时候，就经常需要用到 root 权限了。而这个 wheel 组就是建立用来归纳一些特殊的系统用户用的，这其中的用户都或多或少地拥有 root 的部分功能和权限。也就是说如果你不是 wheel 组成员，那就没有 root 身上任何的特权。也因为这样，使用 wheel 组成员用户的话，会尽量减少对系统 “摧毁性” 破坏的概率和风险。如今大多数的 Linux 发行版本中，仍然保留了 wheel 这个组，虽然它已经不像当初设计出来的那样必要了，但是有些老玩家还是忠于这种旧式经典风格的，所以他们经常还是依旧让 wheel 组发挥着以往的作用。他们是这样做的：在建立他们自己的用户时，将其添加入 wheel 组中（用 wheel 组作为用户的主组），或者使用 vigr 来编辑 /etc/group 文件，将他们的用户名追加到 wheel 组那行的末尾。</p>\n<h2 id=\"16-相同-id-用户\"><a class=\"anchor\" href=\"#16-相同-id-用户\">#</a> 1.6.  相同 ID 用户</h2>\n<h3 id=\"161-相同-id-用户检测\"><a class=\"anchor\" href=\"#161-相同-id-用户检测\">#</a> 1.6.1.     相同 ID 用户检测</h3>\n<p>命令：<strong>cat /etc/passwd</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181735287-152552718.png\" alt=\"\" /></p>\n<p>检查配置 /etc/passwd 中，是否包含用户标识号相同的帐号，用户标识号位置如下：</p>\n<p>以第一行为例，从左至右，依次为：</p>\n<p>帐号名：口令：用户标识号：组标识号：注释性描述：主目录：登录 shell</p>\n<h1 id=\"2-访问控制策略组检测\"><a class=\"anchor\" href=\"#2-访问控制策略组检测\">#</a> 2.   访问控制策略组检测</h1>\n<h2 id=\"21-空口令监测\"><a class=\"anchor\" href=\"#21-空口令监测\">#</a> 2.1.  空口令监测</h2>\n<h3 id=\"211-空口令账户\"><a class=\"anchor\" href=\"#211-空口令账户\">#</a> 2.1.1.     空口令账户</h3>\n<p>命令：<strong>cat /etc/shadow**</strong>（检查 ****shadow**** 文件中密码为空且的用户）**</p>\n<p><strong><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181746917-1212125126.png\" alt=\"\" /></strong></p>\n<p>如图上所示，输出 test3 为空口令账户，且可以登录的用户。</p>\n<p>用户 test2:<span class=\"spoiler\" title=\"你知道得太多了\">:18820:0:99999:7::: 第二个字段是 “:</span>:” 代表没有设置密码，但无法登录。</p>\n<p>用户 test3::18820:0:99999:7::: 第二个字段是 “::” 代表第二个字段密码为空，且可以登录。</p>\n<p>如果检测出有空口令账户，可以做以下处理：</p>\n<p><strong>A.</strong> <strong>删除该用户</strong></p>\n<p>命令如下：</p>\n<p><strong>userdel</strong> <strong>用户名</strong></p>\n<p>rm -rf /home/ 用户名 （可选，表示删除该用户的主目录）</p>\n<p><strong>B.</strong> <strong>给该用户设置密码</strong></p>\n<p><strong>passwd</strong> <strong>用户名</strong></p>\n<h2 id=\"22-弱口令检测\"><a class=\"anchor\" href=\"#22-弱口令检测\">#</a> 2.2.  弱口令检测</h2>\n<h3 id=\"221-弱口令账户\"><a class=\"anchor\" href=\"#221-弱口令账户\">#</a> 2.2.1.     弱口令账户</h3>\n<p>如果检测出弱口令账户，建议设置符合秘密复杂度要求的密码，命令如下：</p>\n<p><strong>passwd</strong> <strong>用户名</strong></p>\n<h1 id=\"3-安全审计策略组检测\"><a class=\"anchor\" href=\"#3-安全审计策略组检测\">#</a> 3.   安全审计策略组检测</h1>\n<h2 id=\"31-日志守护进程\"><a class=\"anchor\" href=\"#31-日志守护进程\">#</a> 3.1.  日志守护进程</h2>\n<h3 id=\"311-开启日志守护进程\"><a class=\"anchor\" href=\"#311-开启日志守护进程\">#</a> 3.1.1.     开启日志守护进程</h3>\n<p>当 rsyslog 没有在运行，则检测失败，操作命令如下：</p>\n<p><strong>systemctl status rsyslog</strong> <strong>（查看状态）</strong></p>\n<p><strong>systemctl stop rsyslog</strong> <strong>（停止）</strong></p>\n<p><strong>systemctl start rsyslog</strong> <strong>（启动）</strong></p>\n<p>启动成功后状态：</p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181759317-955985242.png\" alt=\"\" /></p>\n<p>查看进程有没有启动：</p>\n<p>命令：<strong>ps -ef | grep rsyslog</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181811323-1876137368.png\" alt=\"\" /></p>\n<h1 id=\"4-ssh-策略检测\"><a class=\"anchor\" href=\"#4-ssh-策略检测\">#</a> 4.   SSH 策略检测</h1>\n<h2 id=\"41-ssh-检测\"><a class=\"anchor\" href=\"#41-ssh-检测\">#</a> 4.1.  SSH 检测</h2>\n<p>执行如下命令，修改配置文件</p>\n<p><strong>sudo vim /etc/ssh/sshd_config</strong></p>\n<h2 id=\"411-最大失败尝试登录次数小于等于-5需要修改\"><a class=\"anchor\" href=\"#411-最大失败尝试登录次数小于等于-5需要修改\">#</a> 4.1.1.     最大失败尝试登录次数小于等于 5（需要修改）</h2>\n<p><strong>MaxAuthTries 5</strong></p>\n<p><strong><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181825508-1101393820.png\" alt=\"\" /></strong></p>\n<h3 id=\"412-开启密码认证\"><a class=\"anchor\" href=\"#412-开启密码认证\">#</a> 4.1.2.     开启密码认证</h3>\n<p><strong>PasswordAuthentication yes</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181836171-1811578403.png\" alt=\"\" /></p>\n<h3 id=\"413-开启-rsa-认证\"><a class=\"anchor\" href=\"#413-开启-rsa-认证\">#</a> 4.1.3.     开启 RSA 认证</h3>\n<p><strong>RSAAuthentication yes</strong>  （有的系统 需要手动添加）</p>\n<h3 id=\"414-开启公钥验证\"><a class=\"anchor\" href=\"#414-开启公钥验证\">#</a> 4.1.4.     开启公钥验证</h3>\n<p><strong>PubkeyAuthentication yes</strong></p>\n<p>重启 sshd 生效，重启命令如下：</p>\n<p>CentOS 系列： <strong>systemctl restart sshd</strong></p>\n<p>后续随着建立应用账户会回收 root 权限登陆。</p>\n<h1 id=\"5-入侵防范策略组监测\"><a class=\"anchor\" href=\"#5-入侵防范策略组监测\">#</a> 5.   入侵防范策略组监测</h1>\n<h2 id=\"51-防火墙\"><a class=\"anchor\" href=\"#51-防火墙\">#</a> 5.1.  防火墙</h2>\n<p>查看状态</p>\n<p><strong>systemctl status firewalld.service</strong></p>\n<p>启动防火墙</p>\n<p><strong>systemctl start firewalld.service</strong></p>\n<p>关闭防火墙</p>\n<p><strong>systemctl stop firewalld.service</strong></p>\n<p>重新启动防火墙</p>\n<p><strong>systemctl restart firewalld.service</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181911341-1302733075.png\" alt=\"\" /></p>\n<h2 id=\"52-防暴力破解\"><a class=\"anchor\" href=\"#52-防暴力破解\">#</a> 5.2.  防暴力破解</h2>\n<p>安装 EDR</p>\n<h1 id=\"6-恶意代码防范监测\"><a class=\"anchor\" href=\"#6-恶意代码防范监测\">#</a> 6.   恶意代码防范监测</h1>\n<h2 id=\"61-安装-edr\"><a class=\"anchor\" href=\"#61-安装-edr\">#</a> 6.1.   安装 EDR</h2>\n<h1 id=\"7-ntp-时间同步配置\"><a class=\"anchor\" href=\"#7-ntp-时间同步配置\">#</a> 7.   NTP 时间同步配置</h1>\n<p>安装 ntpdateNTP 时间同步配置</p>\n<p><strong>apt-get install ntpdate</strong></p>\n<p>编辑 /etc/ntp.conf 文件</p>\n<p><strong>vim /etc/ntp.conf</strong></p>\n<p>添加配置</p>\n<p><strong>server 10.14.1.11 prefer iburst</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181342958-1396431206.png\" alt=\"\" /></p>\n<p>其中的 prefer 优先级最高，不然在多个同步服务时，可能自己本地的 ntp 服务不被选中，会使用其他的源作为同步的时间选项。</p>\n<p>其中的 iburst 是初始化时，每 2 秒发送一批同步</p>\n<p>重新启动 NTP 服务器：</p>\n<p><strong>service ntp restart</strong></p>\n<p>查看同步情况：</p>\n<p><strong>watch ntpq –p</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://img2022.cnblogs.com/blog/2605882/202203/2605882-20220304181354751-1267332557.png\" alt=\"\" /></p>\n<p>1. 基线 即安全基线配置，诸如操作系统、<a href=\"https://cloud.tencent.com/product/tdmq?from_column=20065&amp;from=20065\">中间件</a>和<a href=\"https://cloud.tencent.com/solution/database?from_column=20065&amp;from=20065\">数据库</a>的一个整体配置，这个版本中各项配置都符合安全方面的标准。比如在系统安装后需要按安全基线标准，将新机器中各项配置调整到一个安全、高效、合理的数值。</p>\n<p>2. 基线扫描 使用自动化工具、抓取系统和服务的配置项。将抓取到的实际值和标准值进行对比，将不符合的项显示出来，最终以报告 的形式体现出扫描结果有的工具将配置采集和配置对比分开，通过自动化脚本采集配置后再通过特别的软件转换为适合人类阅读的文档</p>\n<p>3. 基线加固自动化脚本的编写 本篇文章主要是记录和学习安全加固脚本，首先放几张安全加固 shell 脚本的命令语法：</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/010db2a0a0bf5f2c256e8a3dae1b584b.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/a8e3ed4e366e9636d928a26546a6d0ac.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/c85957d16e18c69f2197eb9da2ba525a.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/ecdb1c7e1748be34009bef38c0fe108c.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/4adba481ec1e20a9918c8ab917dbd7b4.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/c41abbb4a86e2bc965bad9ec880e66be.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/ae6ee0255bea14ce211554c53c496c73.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/af764641566bb566590ef36c7f2ce77b.png\" alt=\"\" /></p>\n<p>基本命令语法介绍完了，借用网上的脚本来学习：</p>\n<p>在执行脚本前需要提前做好备份：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token hashbang comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>login<span class=\"token punctuation\">.</span>defs <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>login<span class=\"token punctuation\">.</span>defs<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>security<span class=\"token operator\">/</span>limits<span class=\"token punctuation\">.</span>conf <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>security<span class=\"token operator\">/</span>limits<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>su  <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>su<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>profile <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>profile<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue<span class=\"token punctuation\">.</span>net <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>shadow <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>shadow<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>passwd <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>passwd<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>passwd  <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>passwd<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>common<span class=\"token operator\">-</span>password <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>common<span class=\"token operator\">-</span>password<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>host<span class=\"token punctuation\">.</span>conf <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>host<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts<span class=\"token punctuation\">.</span>allow <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts<span class=\"token punctuation\">.</span>allow<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>ntp<span class=\"token punctuation\">.</span>conf <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>ntp<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cp <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>sysctl<span class=\"token punctuation\">.</span>conf <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>sysctl<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>echo <span class=\"token string\">\"============备份完成==================\"</span></pre></td></tr></table></figure><ol>\n<li>检查是否设置口令更改最小间隔天数</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/5a39f3c404022386485af122f4147ba6.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">MINDAY</span><span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/login.defs | grep -v \".*#.*\"| grep PASS_MIN_DAYS|awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$<span class=\"token constant\">MINDAY</span><span class=\"token string\">'s/.*PASS_MIN_DAYS.*/PASS_MIN_DAYS 6/'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>login<span class=\"token punctuation\">.</span>defs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\"检查口令更改最小间隔天数完成\"</span></pre></td></tr></table></figure><p>2. 检查是否设置口令过期前警告天数</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/1df2235b33f18bf694fabe3ce92940d7.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">WARNAGE</span><span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/login.defs | grep -v \".*#.*\"| grep PASS_WARN_AGE|awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$<span class=\"token constant\">WARNAGE</span><span class=\"token string\">'s/.*PASS_WARN.*/PASS_WARN_AGE 30/'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>login<span class=\"token punctuation\">.</span>defs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\"检查口令过期前警告天数完成\"</span></pre></td></tr></table></figure><p>3. 检查口令生存周期</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/982ed110f38278a3b62d66f69388344a.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">MAXDAY</span><span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/login.defs | grep -v \".*#.*\"| grep PASS_MAX_DAYS|awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$<span class=\"token constant\">MAXDAY</span><span class=\"token string\">'s/.*PASS_MAX.*/PASS_MAX_DAYS 90/'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>login<span class=\"token punctuation\">.</span>defs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\"检查口令生存周期完成\"</span></pre></td></tr></table></figure><p>4. 检查口令最小长度</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/1a77b2e8a751e4aacd8f19caa2218f7c.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">MINLEN</span><span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/login.defs | grep -v \".*#.*\"| grep PASS_MIN_LEN|awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$<span class=\"token constant\">MINDAY</span><span class=\"token string\">'s/.*PASS_MIN_LEN.*/PASS_MIN_ LEN 6/'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>login<span class=\"token punctuation\">.</span>defs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\"检查口令最小长度\"</span></pre></td></tr></table></figure><p>5. 检查是否设置 grub，lilo 密码</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/8100006c24e8a3e555118956b0d519ad.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>grub<span class=\"token operator\">=</span><span class=\"token string\">\"/etc/menu.lst\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token operator\">-</span>x <span class=\"token string\">\"$grub\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>then</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>touch <span class=\"token string\">\"$grub\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>echo password<span class=\"token operator\">=</span><span class=\"token number\">123456</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"$grub\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>echo password<span class=\"token operator\">=</span><span class=\"token number\">123456</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"$grub\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>lilo<span class=\"token operator\">=</span><span class=\"token string\">\"/etc/lilo.conf\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token operator\">-</span>x <span class=\"token string\">\"$lilo\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>then</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>touch <span class=\"token string\">\"$lilo\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>echo password<span class=\"token operator\">=</span><span class=\"token number\">123456</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"$lilo\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>echo password<span class=\"token operator\">=</span><span class=\"token number\">123456</span> <span class=\"token operator\">>></span> <span class=\"token string\">\"$lilo\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>fi</pre></td></tr></table></figure><p>6. 检查是否设置 core</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/8497d913f604b4743671b61a4c6c528e.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/security/limits.conf | grep \"#root\" | awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/security/limits.conf | grep \"#root\" | awk '&#123;print $5&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$c<span class=\"token string\">' s/$d/0/g'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>security<span class=\"token operator\">/</span>limits<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>echo <span class=\"token string\">\"设置* hard core 0完成\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/security/limits.conf | grep soft | grep core | awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/security/limits.conf | grep soft | grep core | awk '&#123;print $5&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$e<span class=\"token string\">' s/'</span>$f<span class=\"token string\">'/0/g'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>security<span class=\"token operator\">/</span>limits<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>echo <span class=\"token string\">\"设置* soft core 0完成\"</span></pre></td></tr></table></figure><p>7. 检查系统是否禁用 ctrl+alt+del 组合</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/2f85e3303e75e6e556e12fbed0ed03f9.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/control-alt-delete.conf|grep -v \"#\" | grep /sbin/shutdown | awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>z $a <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>then</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   echo ok</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$a<span class=\"token string\">' s/^/#/'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>control<span class=\"token operator\">-</span>alt<span class=\"token operator\">-</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fi</pre></td></tr></table></figure><p>8. 检查保留历史记录文件的大小与数量</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/9ad5ca992d62a2e688f590518f718fcc.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>echo <span class=\"token string\">\"HISTFILESIZE=5\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>profile</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>echo <span class=\"token string\">\"  检查保留历史命令的记录文件大小完成\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\"HISTSIZE=5\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>profile</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>echo <span class=\"token string\">\"检查保留历史命令的条数完成\"</span></pre></td></tr></table></figure><p>9. 检查是否使用 PAM 认证模块禁止 wheel 组之外的用户 su 为 root</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/4e842bccc8a6055885f2b25c3d879769.png\" alt=\"\" /></p>\n<p>10. 检查是否删除了 /etc/issue.net 文件</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/f966cb5045298f2b695035f47b7be42b.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue<span class=\"token punctuation\">.</span>net <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>then</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mv <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue<span class=\"token punctuation\">.</span>net <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>echo <span class=\"token string\">\"issue.net 文件不存在\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>then</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mv <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>issue<span class=\"token punctuation\">.</span>bak</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>echo <span class=\"token string\">\"issue 文件不存在\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>fi</pre></td></tr></table></figure><p>11. 是否删除与设备运行，维护等工作无关的账户</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/a1a8ec0dcf512d34d4c2a126f6925c45.png\" alt=\"\" /></p>\n<p>12. 检查密码重复使用次数限制</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/7a94fe238cfb70359102ddd0e9b2f2eb.png\" alt=\"\" /></p>\n<p>13. 检查是否配置账户认证失败次数限制</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/a10d597ac99483112839bd8dd0454cd1.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cd <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>f system<span class=\"token operator\">-</span>auth <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>then</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>system<span class=\"token operator\">-</span>auth  <span class=\"token operator\">/</span>etc</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>#num<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">grep -n \"md5\" /etc/system-auth | cut -d \":\" -f 1</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>#sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$num<span class=\"token string\">'    r s/$/ remember=5'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>system<span class=\"token operator\">-</span>auth</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>kk<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/system-auth | grep -v \".*#.*\"| grep md5|awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>echo $kk</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>version<span class=\"token operator\">=</span><span class=\"token string\">\"password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok remember=500\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">\"\"</span>$kk<span class=\"token string\">\"c $version\"</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>system<span class=\"token operator\">-</span>auth</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>letter<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat -n /etc/system-auth |grep password | grep requisite | awk '&#123;print $1&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">''</span>$letter<span class=\"token string\">'s/pam_cracklib.so/&amp; ucredit=-1 lcredit=-1 dcredit=-1 /'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>pam<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>system<span class=\"token operator\">-</span>auth</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>fi</pre></td></tr></table></figure><p>14. 检查是否配置关闭 IP 伪装与绑定</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/21c0681b0f6ca00a93b5c558f0079022.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>snu<span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat /etc/host.conf | awk '&#123;print $2&#125;'</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"$snu\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"on\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> then</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\"没有关闭ip伪装\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sed <span class=\"token operator\">-</span>i <span class=\"token string\">'s/on/off/g'</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>host<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>echo <span class=\"token string\">\"  关闭IP伪装完成\"</span></pre></td></tr></table></figure><p>15. 检查 /etc/hosts 配置</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/c3ea64b5775ba54375c7395c49fae78e.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>f hosts<span class=\"token punctuation\">.</span>allow <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>then</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts<span class=\"token punctuation\">.</span>allow <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\"all:172.18.12.:all\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts<span class=\"token punctuation\">.</span>allow</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>echo <span class=\"token string\">\"sshd:172.18.12.:all\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts<span class=\"token punctuation\">.</span>allow</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cd <span class=\"token operator\">/</span>etc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>f hosts<span class=\"token punctuation\">.</span>deny <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>then</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts<span class=\"token punctuation\">.</span>deny <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>echo <span class=\"token string\">\"all:all\"</span> <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hosts<span class=\"token punctuation\">.</span>deny</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fi</pre></td></tr></table></figure><p>16. 检查相关服务状态</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/94c2218fb1f3fec46933067174adb078.png\" alt=\"\" /></p>\n<p>17. 检查重要文件是否存在 suid 和 sgid 权限</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/ddd078931f7a41e61bdcf36a082834be.png\" alt=\"\" /></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>find <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>chage <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>gpasswd <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>wall <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>chfn <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>chsh <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>newgrp <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>write <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>sbin<span class=\"token operator\">/</span>usernetctl <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>sbin<span class=\"token operator\">/</span>traceroute <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>mount <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>umount <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>ping <span class=\"token operator\">/</span>sbin<span class=\"token operator\">/</span>netreport <span class=\"token operator\">-</span>type f <span class=\"token operator\">-</span>perm <span class=\"token operator\">+</span><span class=\"token number\">6000</span> <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span> <span class=\"token operator\">></span>file<span class=\"token punctuation\">.</span>txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>s file<span class=\"token punctuation\">.</span>txt <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> then</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token string\">\" find。。这条命令有输出\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cat file.txt</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>chmod <span class=\"token number\">755</span> $idoneelse</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>echo <span class=\"token string\">\"find 。。这条命令没有输出\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>fi</pre></td></tr></table></figure><p>18. 其他</p>\n<p><img loading=\"lazy\" data-src=\"https://ask.qcloudimg.com/http-save/yehe-2947494/ed3e50ad14919becfd431c50d47f83f3.png\" alt=\"\" /></p>\n<p>19. 权限设置</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>chmod <span class=\"token number\">644</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>passwd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>chmod <span class=\"token number\">644</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>group</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>chmod <span class=\"token number\">400</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>shadow</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>#chmod <span class=\"token number\">600</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>xinetd<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>chmod <span class=\"token number\">644</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>services</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>chmod <span class=\"token number\">600</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>security</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>chmod <span class=\"token number\">600</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>grub<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>chmod <span class=\"token number\">600</span> <span class=\"token operator\">/</span>boot<span class=\"token operator\">/</span>grub<span class=\"token operator\">/</span>grub<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>chmod <span class=\"token number\">600</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>lilo<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>echo <span class=\"token string\">\"文件权限设置完成\"</span></pre></td></tr></table></figure><p>注：要使用下面示例代码中的命令来实施 Ubuntu 20.04 LTS 服务器的安全加固步骤，首先确保您的服务器上已安装 Git。</p>\n<h2 id=\"1-更新系统\"><a class=\"anchor\" href=\"#1-更新系统\">#</a> 1. 更新系统</h2>\n<p>安全性始于系统的更新。确保您的 Ubuntu 服务器上的所有软件包和操作系统都是最新的版本。使用以下命令更新系统：</p>\n<p>sudo apt update<br />\nsudo apt upgrade</p>\n<h2 id=\"2-配置防火墙\"><a class=\"anchor\" href=\"#2-配置防火墙\">#</a> 2. 配置防火墙</h2>\n<p>Ubuntu 默认启用了 UFW（Uncomplicated Firewall），可以轻松配置防火墙规则。首先，允许 SSH 访问，然后只允许必要的端口通过防火墙。例如，如果您运行 Web 服务器（如 Nginx 或 Apache），可以使用以下命令允许 HTTP（端口 80）和 HTTPS（端口 443）流量：</p>\n<p>sudo ufw allow OpenSSH<br />\nsudo ufw allow 80/tcp<br />\nsudo ufw allow 443/tcp<br />\nsudo ufw enable</p>\n<p>确保在设置完防火墙规则后启用 UFW。</p>\n<h2 id=\"3-禁用不必要的服务\"><a class=\"anchor\" href=\"#3-禁用不必要的服务\">#</a> 3. 禁用不必要的服务</h2>\n<p>默认情况下，Ubuntu 服务器可能启用了一些不必要的服务。检查并禁用不需要的服务以减少潜在的攻击面。使用 <code>systemctl</code>  命令来管理服务，例如：</p>\n<h1 id=\"禁用一个服务\"><a class=\"anchor\" href=\"#禁用一个服务\">#</a> 禁用一个服务</h1>\n<p>sudo systemctl disable (service-name)</p>\n<h1 id=\"停止并禁用一个服务\"><a class=\"anchor\" href=\"#停止并禁用一个服务\">#</a> 停止并禁用一个服务</h1>\n<p>sudo systemctl stop (service-name)<br />\nsudo systemctl disable (service-name)</p>\n<h2 id=\"4-配置-ssh-安全\"><a class=\"anchor\" href=\"#4-配置-ssh-安全\">#</a> 4. 配置 SSH 安全</h2>\n<p>SSH 是远程管理 Ubuntu 服务器的主要方式，因此确保 SSH 安全非常重要。</p>\n<h3 id=\"41-更改-ssh-默认端口\"><a class=\"anchor\" href=\"#41-更改-ssh-默认端口\">#</a> 4.1 更改 SSH 默认端口</h3>\n<p>将 SSH 端口更改为非默认端口（默认是 22）可以降低恶意攻击的风险。编辑 SSH 配置文件：</p>\n<p>sudo nano /etc/ssh/sshd_config</p>\n<p>找到 <code>Port</code>  行并更改端口号，然后重新启动 SSH 服务：</p>\n<p>sudo systemctl restart ssh</p>\n<h3 id=\"42-禁用密码登录\"><a class=\"anchor\" href=\"#42-禁用密码登录\">#</a> 4.2 禁用密码登录</h3>\n<p>使用 SSH 密钥认证来替代密码登录，以提高安全性。编辑 SSH 配置文件：</p>\n<p>sudo nano /etc/ssh/sshd_config</p>\n<p>找到 <code>PasswordAuthentication</code>  行，将其设置为 <code>no</code> ，然后重新启动 SSH 服务：</p>\n<p>PasswordAuthentication no</p>\n<h3 id=\"43-使用-ssh-密钥\"><a class=\"anchor\" href=\"#43-使用-ssh-密钥\">#</a> 4.3 使用 SSH 密钥</h3>\n<p>创建 SSH 密钥对并将公钥复制到服务器上。使用以下命令来生成 SSH 密钥：</p>\n<p>ssh-keygen -t rsa -b 4096</p>\n<p>然后将 <code>~/.ssh/id_rsa.pub</code>  中的公钥复制到服务器的 <code>~/.ssh/authorized_keys</code>  文件中。</p>\n<h2 id=\"5-防止暴力攻击\"><a class=\"anchor\" href=\"#5-防止暴力攻击\">#</a> 5. 防止暴力攻击</h2>\n<p>保护服务器免受暴力攻击是非常重要的。使用工具如 <code>Fail2Ban</code>  来防止暴力 SSH 登录尝试。首先安装 <code>Fail2Ban</code> ：</p>\n<p>sudo apt install fail2ban</p>\n<p>然后配置它来监控 SSH 登录尝试并封锁 IP 地址：</p>\n<p>sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local<br />\nsudo nano /etc/fail2ban/jail.local</p>\n<p>在 <code>jail.local</code>  文件中，配置 SSH 规则，例如：</p>\n<p>[sshd]<br />\nenabled = true<br />\nport = ssh<br />\nfilter = sshd<br />\nlogpath = /var/log/auth.log<br />\nmaxretry = 3</p>\n<p>最后，重新启动 <code>Fail2Ban</code> ：</p>\n<p>sudo systemctl restart fail2ban</p>\n<h2 id=\"6-文件系统安全\"><a class=\"anchor\" href=\"#6-文件系统安全\">#</a> 6. 文件系统安全</h2>\n<h3 id=\"61-使用-apparmor-或-selinux\"><a class=\"anchor\" href=\"#61-使用-apparmor-或-selinux\">#</a> 6.1 使用 AppArmor 或 SELinux</h3>\n<p>AppArmor 和 SELinux 是 Linux 上的强制访问控制工具，可以帮助限制应用程序的权限。根据您的需求选择其中一个并配置它。</p>\n<h4 id=\"配置-apparmor\"><a class=\"anchor\" href=\"#配置-apparmor\">#</a> 配置 AppArmor</h4>\n<h1 id=\"安装-apparmor如果未安装\"><a class=\"anchor\" href=\"#安装-apparmor如果未安装\">#</a> 安装 AppArmor（如果未安装）</h1>\n<p>sudo apt install apparmor apparmor-utils</p>\n<h1 id=\"启用-apparmor\"><a class=\"anchor\" href=\"#启用-apparmor\">#</a> 启用 AppArmor</h1>\n<p>sudo systemctl enable apparmor<br />\nsudo systemctl start apparmor</p>\n<p>然后，为您的应用程序创建或配置 AppArmor 策略文件。</p>\n<h4 id=\"配置-selinux\"><a class=\"anchor\" href=\"#配置-selinux\">#</a> 配置 SELinux</h4>\n<h1 id=\"安装-selinux如果未安装\"><a class=\"anchor\" href=\"#安装-selinux如果未安装\">#</a> 安装 SELinux（如果未安装）</h1>\n<p>sudo apt install selinux-utils selinux-basics selinux-policy-default</p>\n<h1 id=\"启用-selinux\"><a class=\"anchor\" href=\"#启用-selinux\">#</a> 启用 SELinux</h1>\n<p>sudo selinux-activate</p>\n<h1 id=\"重启服务器\"><a class=\"anchor\" href=\"#重启服务器\">#</a> 重启服务器</h1>\n<p>sudo reboot</p>\n<p>然后，为您的应用程序创建或配置 SELinux 策略。</p>\n<h3 id=\"62-限制目录和文件权限\"><a class=\"anchor\" href=\"#62-限制目录和文件权限\">#</a> 6.2 限制目录和文件权限</h3>\n<p>使用 <code>chmod</code>  和 <code>chown</code>  命令来限制对文件和目录的访问权限，确保只有授权的用户可以访问重要的系统文件。</p>\n<h1 id=\"修改文件或目录的权限\"><a class=\"anchor\" href=\"#修改文件或目录的权限\">#</a> 修改文件或目录的权限</h1>\n<p>sudo chmod permissions /path/to/file_or_directory</p>\n<h1 id=\"修改文件或目录的所有者和群组\"><a class=\"anchor\" href=\"#修改文件或目录的所有者和群组\">#</a> 修改文件或目录的所有者和群组</h1>\n<p>sudo chown owner:group /path/to/file_or_directory</p>\n<p>请注意， <code>permissions</code> ， <code>owner</code>  和 <code>group</code>  应根据您的需求进行替换。</p>\n<h2 id=\"7-监控和日志\"><a class=\"anchor\" href=\"#7-监控和日志\">#</a> 7. 监控和日志</h2>\n<p>监控服务器的活动并查看系统日志以及网络流量是检测潜在问题的关键。使用工具如 <code>fail2ban</code> 、 <code>logwatch</code>  和 <code>rkhunter</code>  来监控服务器的安全性。</p>\n<h2 id=\"8-定期备份\"><a class=\"anchor\" href=\"#8-定期备份\">#</a> 8. 定期备份</h2>\n<p>定期备份服务器上的数据，以防止数据丢失。使用备份工具或云存储服务来创建备份策略。</p>\n<h2 id=\"9-教育用户\"><a class=\"anchor\" href=\"#9-教育用户\">#</a> 9. 教育用户</h2>\n<p>对服务器用户进行安全意识培训，教育他们如何创建强密码、避免社会工程攻击和识别潜在的安全威胁。</p>\n<h2 id=\"10-定期审计\"><a class=\"anchor\" href=\"#10-定期审计\">#</a> 10. 定期审计</h2>\n<p>定期审计服务器的安全性，识别并修复潜在的漏洞和问题。确保您的安全策略持续有效。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/07/22/hello-world/",
            "url": "http://example.com/2024/07/22/hello-world/",
            "title": "Hello World",
            "date_published": "2024-07-22T03:05:28.588Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}